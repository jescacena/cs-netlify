[{"id":13,"codersnack":{"id":12,"header":"Introducing CSS","created_at":"2020-01-09T22:34:40.431Z","updated_at":"2020-01-10T11:53:22.811Z","explanation":"#### What is CSS?\n- CSS stands for **Cascading Style Sheets**\n- CSS describes **how HTML elements are to be displayed** on screen, paper, or in other media\n- CSS saves a lot of work. It can **control the layout of multiple web pages all at once**\n- External stylesheets are stored in **CSS files**\n  \n```  ```\n#### Why Use CSS?\n**CSS is used to define styles for your web pages**, including the design, layout and variations in display for different devices and screen sizes. \n  \n```  ```\n#### CSS Solved a Big Problem\nHTML was NEVER intended to contain tags for formatting a web page!\n\nHTML was created to describe the content of a web page, like:\n\n```\n<h1>This is a heading</h1>\n\n<p>This is a paragraph.</p>\n```\n\n> When tags like ``<font>``, and color attributes were added to the HTML 3.2 specification, it started a nightmare for web developers. Development of large websites, where fonts and color information were added to every single page, became a long and expensive process.\n\nTo solve this problem, the **World Wide Web Consortium (W3C) created CSS**.\n\nCSS removed the style formatting from the HTML page!\n  \n```  ```\n#### CSS Saves a Lot of Work!\n*The style definitions are normally saved in external .css files*.\n\nWith an external stylesheet file, **you can change the look of an entire website by changing just one file!**\n\n","references":"- [W3C - Css intro](https://www.w3schools.com/css/css_intro.asp)","featured_image_url":"https://codersnack.com/assets/images/logo-css.jpg","slug":"introducing-css","weblink":"https://codersnack.com/introducing-css","featured_image_preview":{"id":17,"name":"logo-css.jpg","hash":"fe9c37e7c6094541bf01b7581ae83859","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/fe9c37e7c6094541bf01b7581ae83859.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-09T22:34:40.442Z","updated_at":"2020-01-09T22:34:40.442Z"}},"codersnacks_quiz":{"id":13,"question":"CSS is used to ...","response_valid":"define styles for your web pages, including the design, layout and variations in display for different devices and screen sizes. \n\n","response_invalid1":"describe the content of a web page","response_invalid2":"add dynamic data for html5 web pages","created_at":"2020-01-09T22:37:20.936Z","updated_at":"2020-01-09T22:37:20.936Z"},"codersnacks_category":{"id":5,"header":"CSS","description":"CSS - Cascade Style Sheets","snacks_by_cat_json_filename":"css.snacks.json","key":"css","image_url":"https://codersnack.com/assets/images/logo-css.jpg","created_at":"2020-01-09T22:10:20.346Z","updated_at":"2020-01-09T22:10:20.346Z","image_preview":{"id":16,"name":"logo-css.jpg","hash":"e3552e97cc7b45ca8f96b379270d787d","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/e3552e97cc7b45ca8f96b379270d787d.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-09T22:10:20.356Z","updated_at":"2020-01-09T22:10:20.356Z"}},"title":"css - introducing css - used to","created_at":"2020-01-09T22:37:55.218Z","updated_at":"2020-01-09T22:37:55.221Z"},{"id":14,"codersnack":{"id":13,"header":"How To Add CSS and Cascading Order","created_at":"2020-01-10T12:42:42.143Z","updated_at":"2020-01-10T12:42:42.143Z","explanation":"When a browser reads a style sheet, it will format the HTML document according to the information in the style sheet.\n\n```  ```\n#### Three Ways to Insert CSS\nThere are three ways of inserting a style sheet:\n\n- External CSS\n- Internal CSS\n- Inline CSS\n\n```  ```\n### External CSS\nWith an external style sheet, you can change the look of an entire website by changing just one file!\n\nEach HTML page must include a reference to the external style sheet file inside the ``<link>`` element, inside the head section.\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\n</head>\n<body>\n\n<h1>This is a heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>\n```\nAn external style sheet can be written in any text editor, and must be saved with a **.css extension.**\n\nThe external .css file should not contain any HTML tags.\n\nHere is how the \"mystyle.css\" file looks like:\n```\nbody {\n  background-color: lightblue;\n}\n\nh1 {\n  color: navy;\n  margin-left: 20px;\n}\n```\n> Note: Do not add a space between the property value and the unit (such as margin-left: 20 px;). The correct way is: margin-left: 20px;\n\n```  ```\n#### Internal CSS\nAn internal style sheet may be used if one single HTML page has a unique style.\n\nThe internal style is defined inside the <style> element, inside the head section.\n\nExample\nInternal styles are defined within the <style> element, inside the <head> section of an HTML page:\n```\n<!DOCTYPE html>\n<html>\n<head>\n<style>\nbody {\n  background-color: linen;\n}\n\nh1 {\n  color: maroon;\n  margin-left: 40px;\n}\n</style>\n</head>\n<body>\n\n<h1>This is a heading</h1>\n<p>This is a paragraph.</p>\n\n</body>\n</html>\n```\n\n``` ```\n#### Inline CSS\nAn inline style may be used to apply a unique style for a single element.\n\nTo use inline styles, add the style attribute to the relevant element. The style attribute can contain any CSS property.\n\nExample\nInline styles are defined within the \"style\" attribute of the relevant element:\n```\n<!DOCTYPE html>\n<html>\n<body>\n\n<h1 style=\"color:blue;text-align:center;\">This is a heading</h1>\n<p style=\"color:red;\">This is a paragraph.</p>\n\n</body>\n</html>\n```\n> Tip: An inline style loses many of the advantages of a style sheet (by mixing content with presentation). Use this method sparingly.\n\n``` ``\n#### Multiple Style Sheets\nIf some properties have been defined for the same selector (element) in different style sheets, **the value from the last read style sheet will be used**. \n\nAssume that an external style sheet has the following style for the <h1> element:\n```\nh1 {\n  color: navy;\n}\n```\n\nThen, assume that an internal style sheet also has the following style for the <h1> element:\n\n```\nh1 {\n  color: orange;   \n}\n```\n\nExample\nIf the internal style is defined after the link to the external style sheet, the <h1> elements will be \"orange\":\n\n```\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\n<style>\nh1 {\n  color: orange;\n}\n</style>\n</head>\n```\n\nExample\nHowever, if the internal style is defined before the link to the external style sheet, the <h1> elements will be \"navy\": \n\n```\n<head>\n<style>\nh1 {\n  color: orange;\n}\n</style>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mystyle.css\">\n</head>\n```\n\n```  ```\n\n#### Cascading Order\nWhat style will be used when there is more than one style specified for an HTML element?\n\nAll the styles in a page will \"cascade\" into a new \"virtual\" style sheet by the following rules, where number one has the highest priority:\n\n1. Inline style (inside an HTML element)\n2. External and internal style sheets (in the head section)\n3. Browser default\n\nSo, an **inline style has the highest priority**, and will override external and internal styles and browser defaults.\n","references":"[W3C - CSS how to](https://www.w3schools.com/css/css_howto.asp)","featured_image_url":"https://codersnack.com/assets/images/logo-css.jpg","slug":"how-to-add-css-and-cascading-order","weblink":"https://codersnack.com/how-to-add-css-and-cascading-order","featured_image_preview":{"id":18,"name":"logo-css.jpg","hash":"ebf8f06437e24aabb702f8ae38221899","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/ebf8f06437e24aabb702f8ae38221899.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-10T12:42:42.159Z","updated_at":"2020-01-10T12:42:42.159Z"}},"codersnacks_quiz":{"id":14,"question":"CSS - What CSS rule has the highest priority?","response_valid":"Inline styles","response_invalid1":"External stylesheets","response_invalid2":"Browser default styles","created_at":"2020-01-10T12:44:46.157Z","updated_at":"2020-01-10T12:44:46.157Z"},"codersnacks_category":{"id":5,"header":"CSS","description":"CSS - Cascade Style Sheets","snacks_by_cat_json_filename":"css.snacks.json","key":"css","image_url":"https://codersnack.com/assets/images/logo-css.jpg","created_at":"2020-01-09T22:10:20.346Z","updated_at":"2020-01-09T22:10:20.346Z","image_preview":{"id":16,"name":"logo-css.jpg","hash":"e3552e97cc7b45ca8f96b379270d787d","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/e3552e97cc7b45ca8f96b379270d787d.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-09T22:10:20.356Z","updated_at":"2020-01-09T22:10:20.356Z"}},"title":"css - how to add css - what is the highest priority","created_at":"2020-01-10T12:45:26.059Z","updated_at":"2020-01-10T12:45:26.062Z"},{"id":15,"codersnack":{"id":14,"header":"CSS Layout - The position Property","created_at":"2020-01-10T14:13:11.088Z","updated_at":"2020-01-20T20:07:23.218Z","explanation":"The position property specifies the type of positioning method used for an element (static, relative, fixed, absolute or sticky).\n\nThere are five different position values:\n\n- static\n- relative\n- fixed\n- absolute\n- sticky\n\n**Elements are then positioned using the top, bottom, left, and right properties**. However, these properties will not work unless the position property is set first. They also work differently depending on the position value.\n\n#### position static\n> HTML elements are positioned static by default.\n\n**Static positioned elements are not affected by the top, bottom, left, and right properties**.\n\nAn element with *position static* is not positioned in any special way; it is always **positioned according to the normal flow of the page**:\n\nThis *<div>*  element has position: static;\nHere is the CSS that is used:\n\nExample\n``` \ndiv.static {\n  position: static;\n  border: 3px solid #73AD21;\n}\n``` \n#### position relative\nAn element with position: relative; is positioned **relative to its normal position**.\n\nSetting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. *Other content will not be adjusted to fit into any gap left by the element*.\n\nThis *<div>*  element has **position relative**\nHere is the CSS that is used:\n\nExample\n``` \ndiv.relative {\n  position: relative;\n  left: 30px;\n  border: 3px solid #73AD21;\n}\n``` \n#### position fixed\nAn element with *position fixed* is **positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled**. The top, right, bottom, and left properties are used to position the element.\n\n> A fixed element does not leave a gap in the page where it would normally have been located.\n\nNotice the fixed element in the lower-right corner of the page. Here is the CSS that is used:\n\nExample\n```  \ndiv.fixed {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  width: 300px;\n  border: 3px solid #73AD21;\n}\n```\n #### position absolute\nAn element with position: absolute; is **positioned relative to the nearest positioned ancestor** (instead of positioned relative to the viewport, like fixed).\n\nHowever; **if an absolute positioned element has no positioned ancestors, it uses the document body**, and moves along with page scrolling.\n\nNote: A \"positioned\" element is one whose position is anything except static.\n\nHere is a simple example:\n\nExample\n``` \ndiv.relative {\n  position: relative;\n  width: 400px;\n  height: 200px;\n  border: 3px solid #73AD21;\n}\n\ndiv.absolute {\n  position: absolute;\n  top: 80px;\n  right: 0;\n  width: 200px;\n  height: 100px;\n  border: 3px solid #73AD21;\n}\n``` \n#### position sticky\nAn element with position: sticky; is **positioned based on the user's scroll position**.\n\nA sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it \"sticks\" in place (like position:fixed).\n\n\n> Note: Internet Explorer, Edge 15 and earlier versions do not support sticky positioning. Safari requires a -webkit- prefix (see example below). You must also specify at least one of top, right, bottom or left for sticky positioning to work.\n\nIn this example, the sticky element sticks to the top of the page (top: 0), when you reach its scroll position.\n\nExample\n``` \ndiv.sticky {\n  position: -webkit-sticky; /* Safari */\n  position: sticky;\n  top: 0;\n  background-color: green;\n  border: 2px solid #4CAF50;\n}\n``` \n#### Overlapping Elements\nWhen elements are positioned, they can overlap other elements.\n\nThe **z-index** property **specifies the stack order of an element** (which element should be placed in front of, or behind, the others).\n\nAn element can have a *positive or negative stack order*:\n\nIm this example because the image has a z-index of -1, it will be placed behind the text.\nExample\n``` \nimg {\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  z-index: -1;\n}\n``` \n**An element with greater stack order is always in front of an element with a lower stack order**.\n\n> Note: If two positioned elements overlap without a z-index specified, the element positioned last in the HTML code will be shown on top.\n\n","references":"- [W3C - CSS positioning](https://www.w3schools.com/css/css_positioning.asp)","featured_image_url":"https://codersnack.com/assets/images/logo-css.jpg","slug":"css-layout-the-position-property","weblink":"https://codersnack.com/css-layout-the-position-property","featured_image_preview":{"id":19,"name":"logo-css.jpg","hash":"f917789d2002414e878e4f041c609288","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/f917789d2002414e878e4f041c609288.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-10T14:13:11.101Z","updated_at":"2020-01-10T14:13:11.101Z"}},"codersnacks_quiz":{"id":15,"question":"CSS position - How position fixed place the element ?","response_valid":"It is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled","response_invalid1":"It is positioned relative to the nearest positioned ancestor","response_invalid2":"It is positioned based on the user's scroll position","created_at":"2020-01-10T14:16:04.891Z","updated_at":"2020-01-10T14:16:04.891Z"},"codersnacks_category":{"id":5,"header":"CSS","description":"CSS - Cascade Style Sheets","snacks_by_cat_json_filename":"css.snacks.json","key":"css","image_url":"https://codersnack.com/assets/images/logo-css.jpg","created_at":"2020-01-09T22:10:20.346Z","updated_at":"2020-01-09T22:10:20.346Z","image_preview":{"id":16,"name":"logo-css.jpg","hash":"e3552e97cc7b45ca8f96b379270d787d","sha256":"6H8KSFMpaiYF1EcUIuOenxvCZOimG_n+4EMa-OZ2X2E","ext":".jpg","mime":"image/jpeg","size":44.74,"url":"/uploads/e3552e97cc7b45ca8f96b379270d787d.jpg","provider":"local","provider_metadata":null,"created_at":"2020-01-09T22:10:20.356Z","updated_at":"2020-01-09T22:10:20.356Z"}},"title":"css - position property - how position fixed","created_at":"2020-01-10T14:17:38.155Z","updated_at":"2020-01-10T14:17:38.159Z"}]