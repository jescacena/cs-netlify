[
    {
        "id": 6,
        "codersnack": {
            "id": 5,
            "header": "What is functional programming?",
            "created_at": "2019-12-31T20:10:18.316Z",
            "updated_at": "2020-01-04T21:15:54.433Z",
            "explanation": "Functional programming is a *programming paradigm* that expresses a computation directly as pure functional transformation of data.\n\n A functional program can be viewed as a declarative program where computations are specified as *pure functions*.\n\n> Pure functions is a function that returns always the same value for the same input and has no side effects.\n\nIn constrast to imperative programming (which describe how to does something) , functional programming **describe what to to instead of how to do it**.\n\nJavascript example using Imperative approach\n\n```\nfunction getFileMapById(files) {\n  const fileMap = {};\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    fileMap[file.id] = file;\n  }\n  return fileMap\n}\n```\n\nSame example using Declarative/Functional approach\n\n```\nfunction getFileMapById(files) {\n  return lodash.keyBy(files, \"id\")\n}\n```\n",
            "references": "[Why functional programming](https://sookocheff.com/post/fp/why-functional-programming/)\n[Functional Programming Fundamentals](https://www.matthewgerstman.com/tech/functional-programming-fundamentals/)",
            "featured_image_url": "https://codersnack.com/assets/images/fp_lisp.png",
            "slug": "functional-programming.what-is",
            "weblink": "https://codersnack.com/functional-programming.what-is/",
            "featured_image_preview": {
                "id": 9,
                "name": "fp_lisp.png",
                "hash": "ec0bb99fde554db38747ee63d2561e64",
                "sha256": "nHAsAzYE9OWYIrNWFTj2J9UciSpJ_iDX4YpeoN3NmAQ",
                "ext": ".png",
                "mime": "image/png",
                "size": 58.71,
                "url": "/uploads/ec0bb99fde554db38747ee63d2561e64.png",
                "provider": "local",
                "provider_metadata": null,
                "created_at": "2019-12-31T20:10:18.326Z",
                "updated_at": "2019-12-31T20:10:18.326Z"
            }
        },
        "codersnacks_quiz": {
            "id": 6,
            "question": "Is code that executes asynchronous considered as functional?",
            "response_valid": "No",
            "response_invalid1": "Yes",
            "response_invalid2": "It depends of variables or data involved",
            "created_at": "2019-12-31T20:28:03.371Z",
            "updated_at": "2019-12-31T20:28:03.371Z"
        },
        "codersnacks_category": {
            "id": 4,
            "header": "Functional programming",
            "description": "Functional programming",
            "snacks_by_cat_json_filename": "functional-programming.snacks.json",
            "key": "functional-programming",
            "image_url": "https://codersnack.com/assets/images/functional-programming.png",
            "created_at": "2019-12-31T19:54:16.670Z",
            "updated_at": "2020-01-04T11:09:10.552Z",
            "image_preview": {
                "id": 6,
                "name": "functional-programming.png",
                "hash": "7e7ea3aa34db4132bea6170855fb1b1b",
                "sha256": "1fFlKySlujSnKGjQYTfpZMXAqdewwvZNh_wdn-wHkhc",
                "ext": ".png",
                "mime": "image/png",
                "size": 10.27,
                "url": "/uploads/7e7ea3aa34db4132bea6170855fb1b1b.png",
                "provider": "local",
                "provider_metadata": null,
                "created_at": "2019-12-31T19:54:16.680Z",
                "updated_at": "2019-12-31T19:54:16.680Z"
            }
        },
        "title": "Functional programming - what is functional - is code that ...",
        "created_at": "2019-12-31T20:34:55.525Z",
        "updated_at": "2019-12-31T20:34:55.529Z"
    }
]
