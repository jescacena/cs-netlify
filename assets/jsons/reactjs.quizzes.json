[{"id":5,"codersnack":{"id":4,"header":"What is React?","created_at":"2019-12-31T20:04:40.879Z","updated_at":"2020-01-09T11:23:21.173Z","explanation":"React is a free, unlicensed JS library focused in **UI management**.\n\nCreated by *Facebook*, React was initially released in 2013.\n\nReact has some unique core concepts. It has a virtual DOM, JSX components, input properties, and props. Also, each React component has a state and a lifecycle.\n\n#### Virtual DOM\nInstead of constantly having to work with the real DOM, which is very expensive, everything is handled virtually until we absolutely need to update the DOM. \n\n#### JSX \nIt is officially an XML-like syntax that is close to HTML, but not quite HTML. It is actually JavaScript with HTML sprinkled in.\n\nExample\n\n```\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n","references":"- [Fun with React - A quick overview](https://www.telerik.com/blogs/fun-with-react-a-quick-overview)","featured_image_url":"https://codersnack.com/assets/images/logo-reactjs.png","slug":"react-what-is","weblink":"https://codersnack.com/react-what-is/","featured_image_preview":{"id":8,"name":"logo-reactjs.png","hash":"51404cadac89402c960c70f6a9cc9b4a","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/51404cadac89402c960c70f6a9cc9b4a.png","provider":"local","provider_metadata":null,"created_at":"2019-12-31T20:04:40.889Z","updated_at":"2019-12-31T20:04:40.889Z"}},"codersnacks_quiz":{"id":5,"question":"How does React manage DOM changes?","response_valid":"By using a Virtual DOM","response_invalid1":"Accessing directly the browser DOM","response_invalid2":"It doesn't manage DOM changes","created_at":"2019-12-31T20:27:15.788Z","updated_at":"2019-12-31T20:27:15.788Z"},"codersnacks_category":{"id":2,"header":"ReactJS","description":"ReactJS","snacks_by_cat_json_filename":"reactjs.snacks.json","key":"reactjs","image_url":"https://codersnack.com/assets/images/logo-reactjs.png","created_at":"2019-12-31T19:51:23.456Z","updated_at":"2020-01-04T11:09:32.516Z","image_preview":{"id":4,"name":"logo-reactjs.png","hash":"184e26e835dc4e16ad7789a8ca97d25d","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/184e26e835dc4e16ad7789a8ca97d25d.png","provider":"local","provider_metadata":null,"created_at":"2019-12-31T19:51:23.474Z","updated_at":"2019-12-31T19:51:23.474Z"}},"title":"Reactjs - What is reactjs -- how does react manage ","created_at":"2019-12-31T20:33:25.234Z","updated_at":"2019-12-31T20:33:25.237Z"},{"id":10,"codersnack":{"id":9,"header":"ReactJS - Introducing JSX","created_at":"2020-01-09T19:50:14.060Z","updated_at":"2020-01-09T20:01:42.321Z","explanation":"Consider this variable declaration:\n\n```\nconst element = <h1>Hello, world!</h1>;\n```\n\nThis funny tag syntax is neither a string nor HTML.\n\nIt is called JSX, and it is a **syntax extension to JavaScript**. We recommend using it with React to describe what the UI should look like. JSX may remind you of a template language, but it comes with the full power of JavaScript.\n\n**JSX produces React “elements”**.\n\n\n### Why JSX?\n\n**React embraces the fact that rendering logic is inherently coupled** with other UI logic: how events are handled, how the state changes over time, and how the data is prepared for display.\n\nInstead of artificially separating technologies by putting markup and logic in separate files, **React separates concerns with loosely coupled units called “components” that contain both**. We will come back to components in a further section, but if you’re not yet comfortable putting markup in JS, this talk - https://www.youtube.com/watch?v=x7cQ3mrcKaY -  might convince you otherwise.\n\nReact doesn’t require using JSX, but most people find it helpful as a visual aid when working with UI inside the JavaScript code. It also allows React to show more useful error and warning messages.\n\n### JSX Represents Objects\nBabel compiles JSX down to React.createElement() calls.\n\nThese two examples are identical:\n```\nconst element = (\n  <h1 className=\"greeting\">\n    Hello, world!\n  </h1>\n);\nconst element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);\n\n```\n**React.createElement()** *performs a few checks to help you write bug-free code* but essentially it creates an object like this:\n\n```\n// Note: this structure is simplified\nconst element = {\n  type: 'h1',\n  props: {\n    className: 'greeting',\n    children: 'Hello, world!'\n  }\n};\n```\n\n**These objects are called “React elements”.** You can think of them as *descriptions of what you want to see on the screen*. React reads these objects and uses them to construct the DOM and keep it up to date.\n","references":"[Reactjs.org - Introducing JSX](https://reactjs.org/docs/introducing-jsx.html)\n[Why Jsx talk](https://www.youtube.com/watch?v=x7cQ3mrcKaY)","featured_image_url":"https://codersnack.com/assets/images/logo-reactjs.png","slug":"reactjs-introducing-jsx","weblink":"https://codersnack.com/reactjs-introducing-jsx","featured_image_preview":{"id":12,"name":"logo-reactjs.png","hash":"39731a1caf194ab78276d07a65d53f50","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/39731a1caf194ab78276d07a65d53f50.png","provider":"local","provider_metadata":null,"created_at":"2020-01-09T19:50:14.078Z","updated_at":"2020-01-09T19:50:14.078Z"}},"codersnacks_quiz":{"id":10,"question":"Choose one of the reasons of using JSX in  ReactJS?","response_valid":"Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with loosely coupled units called “components” that contain both.","response_invalid1":"Using a more advanced template engine","response_invalid2":"Adding HTML5 features","created_at":"2020-01-09T19:54:07.163Z","updated_at":"2020-01-09T19:54:07.163Z"},"codersnacks_category":{"id":2,"header":"ReactJS","description":"ReactJS","snacks_by_cat_json_filename":"reactjs.snacks.json","key":"reactjs","image_url":"https://codersnack.com/assets/images/logo-reactjs.png","created_at":"2019-12-31T19:51:23.456Z","updated_at":"2020-01-04T11:09:32.516Z","image_preview":{"id":4,"name":"logo-reactjs.png","hash":"184e26e835dc4e16ad7789a8ca97d25d","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/184e26e835dc4e16ad7789a8ca97d25d.png","provider":"local","provider_metadata":null,"created_at":"2019-12-31T19:51:23.474Z","updated_at":"2019-12-31T19:51:23.474Z"}},"title":"reactjs - introducing jsx - choose reason jsx","created_at":"2020-01-09T19:54:43.214Z","updated_at":"2020-01-09T19:54:43.219Z"},{"id":11,"codersnack":{"id":10,"header":"ReactJS - Components and Props","created_at":"2020-01-09T20:24:47.496Z","updated_at":"2020-01-09T20:24:47.496Z","explanation":"> Components let you split the UI into independent, reusable pieces, and think about each piece in isolation. \n\n**Conceptually, components are like JavaScript functions**. They accept arbitrary inputs (called *“props”*) and return React elements describing what should appear on the screen.\n\n### Function and Class Components\nThe simplest way to define a component is to write a JavaScript function:\n```\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\nThis function is a valid React component because *it accepts a single “props”* (which stands for properties) object argument with data and *returns a React element*. We call such components *“function components”* because they are literally JavaScript functions.\n\nYou can also *use an ES6 class to define a componen*t:\n```\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\nThe above two components are equivalent from React’s point of view.\n\n*Classes have some additional features* that we will discuss in the next sections. Until then, we will use function components for their conciseness.\n\n### Props are Read-Only\nWhether you declare a component as a function or a class, it must *never modify its own props*. Consider this sum function:\n```\nfunction sum(a, b) {\n  return a + b;\n}\n```\n\nSuch functions are called *“pure”* because they do not attempt to change their inputs, and always return the same result for the same inputs.\n\nIn contrast, *this function is impure* because it changes its own input:\n```\nfunction withdraw(account, amount) {\n  account.total -= amount;\n}\n```\n\nReact is pretty flexible but it has a single strict rule:\n\n> All React components must act like pure functions with respect to their props.\n\nOf course, *application UIs are dynamic and change over time*. In the next section,* we will introduce a new concept of “state”*. State allows React components to change their output over time in response to user actions, network responses, and anything else, without violating this rule.","references":null,"featured_image_url":"https://codersnack.com/assets/images/logo-reactjs.png","slug":"reactjs-components-and-props","weblink":"https://codersnack.com/reactjs-components-and-props","featured_image_preview":{"id":14,"name":"logo-reactjs.png","hash":"f3090bf35fe04b8e8b7caa565a5a52bb","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/f3090bf35fe04b8e8b7caa565a5a52bb.png","provider":"local","provider_metadata":null,"created_at":"2020-01-09T20:24:47.507Z","updated_at":"2020-01-09T20:24:47.507Z"}},"codersnacks_quiz":{"id":11,"question":"Reactjs Comp & Props - Choose what sentence is true","response_valid":"Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.","response_invalid1":"The only way of creating React elements is using ES6 classes","response_invalid2":"Changing props allows components to render dinamically","created_at":"2020-01-09T20:29:57.969Z","updated_at":"2020-01-09T20:29:57.969Z"},"codersnacks_category":{"id":2,"header":"ReactJS","description":"ReactJS","snacks_by_cat_json_filename":"reactjs.snacks.json","key":"reactjs","image_url":"https://codersnack.com/assets/images/logo-reactjs.png","created_at":"2019-12-31T19:51:23.456Z","updated_at":"2020-01-04T11:09:32.516Z","image_preview":{"id":4,"name":"logo-reactjs.png","hash":"184e26e835dc4e16ad7789a8ca97d25d","sha256":"ek-ixAp6Ir6UtlIEoswH3vum83sE3lYiacTqgsQHpCI","ext":".png","mime":"image/png","size":10.75,"url":"/uploads/184e26e835dc4e16ad7789a8ca97d25d.png","provider":"local","provider_metadata":null,"created_at":"2019-12-31T19:51:23.474Z","updated_at":"2019-12-31T19:51:23.474Z"}},"title":"reactjs - comp & props - choose true","created_at":"2020-01-09T20:30:56.263Z","updated_at":"2020-01-09T20:30:56.266Z"}]